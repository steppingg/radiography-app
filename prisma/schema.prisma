// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String        @unique
  email       String        @unique
  password    String
  role        String
  radiography Radiography[]
  request     Request[]
  sessions    Session[]
  accounts    Account[]
}

model Image {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  src           String
  radiography   Radiography? @relation(fields: [radiographyId], references: [id])
  radiographyId String?      @db.ObjectId
  request       Request[]
}

model Radiography {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  images          Image[]
  patientFullName String
  patientAge      Int
  text            String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  doctor          User      @relation(fields: [userId], references: [id])
  userId          String    @db.ObjectId
  Request         Request[]
}

model Request {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  image         Image        @relation(fields: [imageId], references: [id])
  imageId       String       @db.ObjectId
  radiography   Radiography? @relation(fields: [radiographyId], references: [id])
  radiographyId String?      @db.ObjectId
  doctor        User         @relation(fields: [userId], references: [id])
  userId        String       @db.ObjectId
  completed     Boolean      @default(false)
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @db.ObjectId
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
